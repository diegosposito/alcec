<?php

/**
 * BaseDetalleNota
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $iddetallenota
 * @property string $descripcion
 * @property string $resultado
 * @property float $valorinferior
 * @property float $valorsuperior
 * @property boolean $activo
 * @property integer $idescalanota
 * @property EscalasNotas $EscalasNotas
 * 
 * @method integer      getIddetallenota() Returns the current record's "iddetallenota" value
 * @method string       getDescripcion()   Returns the current record's "descripcion" value
 * @method string       getResultado()     Returns the current record's "resultado" value
 * @method float        getValorinferior() Returns the current record's "valorinferior" value
 * @method float        getValorsuperior() Returns the current record's "valorsuperior" value
 * @method boolean      getActivo()        Returns the current record's "activo" value
 * @method integer      getIdescalanota()  Returns the current record's "idescalanota" value
 * @method EscalasNotas getEscalasNotas()  Returns the current record's "EscalasNotas" value
 * @method DetalleNota  setIddetallenota() Sets the current record's "iddetallenota" value
 * @method DetalleNota  setDescripcion()   Sets the current record's "descripcion" value
 * @method DetalleNota  setResultado()     Sets the current record's "resultado" value
 * @method DetalleNota  setValorinferior() Sets the current record's "valorinferior" value
 * @method DetalleNota  setValorsuperior() Sets the current record's "valorsuperior" value
 * @method DetalleNota  setActivo()        Sets the current record's "activo" value
 * @method DetalleNota  setIdescalanota()  Sets the current record's "idescalanota" value
 * @method DetalleNota  setEscalasNotas()  Sets the current record's "EscalasNotas" value
 * 
 * @package    sig
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDetalleNota extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('detalle_nota');
        $this->hasColumn('iddetallenota', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('descripcion', 'string', 50, array(
             'type' => 'string',
             'primary' => false,
             'notnull' => true,
             'default' => '',
             'length' => 50,
             ));
        $this->hasColumn('resultado', 'string', 15, array(
             'type' => 'string',
             'primary' => false,
             'notnull' => true,
             'default' => '',
             'length' => 15,
             ));
        $this->hasColumn('valorinferior', 'float', null, array(
             'type' => 'float',
             'primary' => false,
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('valorsuperior', 'float', null, array(
             'type' => 'float',
             'primary' => false,
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'primary' => false,
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('idescalanota', 'integer', null, array(
             'type' => 'integer',
             'primary' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('EscalasNotas', array(
             'local' => 'idescalanota',
             'foreign' => 'idescalanota'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $fzblameable0 = new Doctrine_Template_fzblameable();
        $this->actAs($timestampable0);
        $this->actAs($fzblameable0);
    }
}