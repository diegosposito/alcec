<?php

/**
 * AreasCarreraTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class AreasCarreraTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object AreasCarreraTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('AreasCarrera');
    }
    
    // Obtiene la area-carrera
    public static function obtenerUnidadesAcademicas($idcarrera)
    {
		$resultado = Doctrine_Manager::getInstance()->getCurrentConnection()->fetchAssoc("
			SELECT	ac.idarea AS idarea, ar.descripcion AS area
				FROM areas_carrera ac
				INNER JOIN areas ar ON ac.idarea=ar.idarea		
				INNER JOIN areas de ON ar.idareadependiente=de.idarea	
				WHERE 
					ar.idtipoarea=3 and ac.idcarrera=".$idcarrera
		);

		return $resultado;		
    }          

    // Obtiene la area-carrera
    public static function obtenerAreasCarrera($idarea, $idcarrera)
    {
		$q = Doctrine_Query::create()
  			->select('a.*')
    		->from('AreasCarrera a')
    		->where('a.idcarrera = '.$idcarrera)
    		->andWhere('a.idarea = '.$idarea);
		
		return $q->fetchOne();
    }      
    
    // Obtiene todas las carreras asociadas a un area
    public static function obtenerCarrerasPorArea($idarea)
    {
		$q = Doctrine_Query::create()
  			->select('c.*')
    		->from('Carreras c, AreasCarrera a')
    		->where('c.idcarrera = a.idcarrera')
    		->andWhere('a.idarea = '.$idarea)
    		->orderBy('c.nombre ASC');
		
		return $q->execute();
    }  
    
    // Obtiene todas las carreras asociadas a un area con detalle de plan
    public static function obtenerCarrerasPlanesPorArea($idarea)
    {
		$q = Doctrine_Query::create()
  			->select('p.*, c.nombre as nombrecarrera, p.nombre as nombreplan')
    		->from('PlanesEstudios p, p.Carreras c, AreasCarrera a')
    		->where('p.idcarrera = c.idcarrera')
    		->andWhere('c.idcarrera = a.idcarrera')
    	//	->andWhere('p.idestadoplan = 2')
    		->andWhere('a.idarea = '.$idarea)
    		->orderBy('c.nombre ASC');
		
		return $q->execute();
    }  

    // Obtiene todas las carreras asociadas a un area con detalle de plan
    public static function obtenerCarrerasPlanesPorAreaPorPersona($idarea, $idpersona)
    {
        $q = Doctrine_Query::create()
        ->select('p.*, c.nombre as nombrecarrera, p.nombre as nombreplan')
        ->from('PlanesEstudios p, p.Carreras c, AreasCarrera a, Alumnos al')
        ->where('p.idcarrera = c.idcarrera')
        ->andWhere('p.idplanestudio = al.idplanestudio')
        ->andWhere('c.idcarrera = a.idcarrera')
        ->andWhere('al.idpersona = '.$idpersona)
        ->andWhere('a.idarea = '.$idarea)
        ->orderBy('c.nombre ASC');
    
        return $q->execute();
    }  


     // Obtiene todas las facultades para un area
    public static function obtenerFacultadesPorArea($idarea)
    {
		$q = Doctrine_Query::create()
  			->select('f.*')
    		->from('Facultades f, Carreras c, AreasCarrera a')
    		->where('f.idfacultad = c.idfacultad')
    		->andWhere('c.idcarrera = a.idcarrera')
    		->andWhere('a.idarea = '.$idarea)
    		->orderBy('f.nombre ASC');
		
		     return $q->execute();
    } 

   // Obtiene la facultad (unica) para hacer designaciones de profesores
    public static function obtenerFacultadxdesignacion()
    {
    
      $idarea=sfContext::getInstance()->getUser()->getProfile()->getIdArea();
      $idfacultad = "0";

      // echo "area ".$idarea;exit;
      $q = Doctrine_Query::create()
        ->select('a.*, f.*, c.*')->distinct()
        ->from('AreasCarrera a')
        ->innerJoin('a.Carreras c on a.idcarrera = c.idcarrera')
        ->innerJoin('c.Facultades f on c.idfacultad = f.idfacultad')
        ->where('a.idarea = '.$idarea)
        ->setHydrationMode(Doctrine::HYDRATE_ARRAY)
        ->execute();

      foreach($q as $item) {
        $idfacultad=$item['Carreras']['idfacultad'];
      } 
     
      return $idfacultad;
    }     
}