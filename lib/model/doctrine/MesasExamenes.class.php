<?php

/**
 * MesasExamenes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sig
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class MesasExamenes extends BaseMesasExamenes
{
  public function __toString() {
	return $this->getFecha()." - ".$this->getHora();
  }	
  
  // Consulta si la mesa de examen fue reabierta en algun momento
  public function fueReabierta() {
  	$resultado = false;
  	$q = Doctrine_Query::create()
  	->select("h.*")
  	->from("EstadosMesasExamenesHistorial h")
  	->innerjoin('h.MesasExamenes m on h.idmesaexamen=m.idmesaexamen')
  	->where("m.idmesaexamen = ".$this->getIdmesaexamen())
  	->andWhere("m.idestadomesaexamen=3")
  	->andWhere("h.idestadomesaexamen=4")
  	->execute();
  	
  
  	foreach($q as $item){
  		$resultado = true;
  	}
  
  	return $resultado;
  }  

  // Existe ese folio
  public function existeFolio($libro,$folio) {
	$resultado = false;
	$q = Doctrine_Query::create()
		->select("f.*")
	 	->from("MesasExamenes f")
	 	->where("f.idlibroacta = ".$libro)
	    ->andWhere("f.folio = ".$folio)
	    ->andWhere("(f.idestadomesaexamen= 3) or (f.idestadomesaexamen= 4)")
	    ->execute();
	       
	foreach($q as $item){
		$resultado = true;
	}

	return $resultado;
  }

  // Buscar ultimo folio
  public function buscarUltimoFolio($libro) {
	$resultado = 0;
	$q = Doctrine_Query::create()
		->select("*")
	 	->from("MesasExamenes f")
	 	->where("f.idlibroacta = ".$libro)
	    ->orderBy("CONVERT(INT, columnName)f.folio DESC")
	    ->execute();
	    	
	foreach($q as $oMesaExamen){
		$resultado = $oMesaExamen->folio;
	}

	return $resultado;
  }    
    
  // Obtiene los inscriptos a una mesa de examen por nombre
  public function obtenerInscriptos($orden=1) {
  	if ($orden==1) {
  		$orderBy = "p.apellido ASC, p.nombre ASC";
  	} else {
  		$orderBy = "e.created_at ASC";
  	}
	$q = Doctrine_Query::create()
		->select('e.*')
		->from('Examenes e')
		->innerjoin('e.Alumnos a on e.idalumno=a.idalumno')
	 	->innerjoin('a.Personas p on a.idpersona=p.idpersona')
	    ->where('e.idmesaexamen = '.$this->getIdmesaexamen())
	    ->groupBy('e.idalumno')
	    ->orderBy($orderBy);
	return $q->execute();
  }	
        
  // Obtiene las designaciones de profesores a una mesa de examen
  public function obtenerDesignaciones($tipo) {
	$arreglo = array();
	    
    if ($tipo == 0) {
	   	$q = Doctrine_Query::create()
	  		->select('d.*')
	  		->from('DesignacionesMesas d')
	    	->where('d.idmesaexamen = '.$this->getIdmesaexamen())
	    	->orderBy('d.idtipodesignacionmesa ASC');
	}else{
	   	$q = Doctrine_Query::create()
	  		->select('d.*')
		  	->from('DesignacionesMesas d')
	    	->where('d.idmesaexamen = '.$this->getIdmesaexamen())
	    	->andWhere('d.idtipodesignacionmesa = '.$tipo);
	}
	/* foreach ($q as $item){
	   	$arreglo[$item->getIdtipodesignacionmesa()] = Doctrine_Core::getTable('Personas')->find($item->getIdpersona());
	}*/

	return $q->execute();
  }	

  // Obtiene mesas publicadas 
  public function obtenerMesasPublicadasCatedra() {

	$arreglo = array();

	$q = Doctrine_Query::create()
		->select('idmesaexamen, fecha, idcondicion, cm.condicion as condicion')
	 	->from("MesasExamenes me")
        ->innerJoin("me.CondicionesMesas cm on cm.idcondicion=me.idcondicion")
	    ->where("me.idcatedra = ".$this->getIdcatedra())
		->andWhere('me.idestadomesaexamen = 2')
	    ->orderBy("me.fecha ASC")->execute();

	foreach ($q as $item){
		$arreglo[$item['idmesaexamen']] = $item->getIdmesaexamen().','.$item->getFecha().','.$item->getCondicion().','.$item->getIdmesaexamen();
	}

	return $arreglo;
  }	
  
  
  // Obtiene los inscriptos a una mesa de examen por nombre
  public function obtenerFechaCierre($plazoborrado, $calendario) {
  	$i = $plazoborrado;
  	$fechacierre = date('Y-m-d',strtotime('-'.$i.' day', strtotime($this->getFecha())));
  	$diacierre = date("D",strtotime($fechacierre));
  	
  	if ($diacierre=="Sat") {
  		$fechacierre = date('Y-m-d',strtotime('-1 day', strtotime($fechacierre)));
  	} elseif($diacierre=="Sun") {
  		//$fechacierre = date('Y-m-d',strtotime('-2 day', strtotime($fechacierre)));
  		$fechacierre = date('Y-m-d',strtotime('-1 day', strtotime($fechacierre)));
  	}
  	
  	if($calendario->esFeriado($fechacierre)!=0) {
  		$fechacierre = date('Y-m-d',strtotime('-1 day', strtotime($calendario->esFeriado($fechacierre))));
  		$diacierre = date("D",strtotime($fechacierre));
  		if ($diacierre=="Sat") {
  			$fechacierre = date('Y-m-d',strtotime('-1 day', strtotime($fechacierre)));
  		} elseif($diacierre=="Sun") {
  			//$fechacierre = date('Y-m-d',strtotime('-2 day', strtotime($fechacierre)));
  			$fechacierre = date('Y-m-d',strtotime('-1 day', strtotime($fechacierre)));
  		}  	
  	}
  	
  	return $fechacierre;
  }  
}