<?php

/**
 * FichaCarga
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sig
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class FichaCarga extends BaseFichaCarga
{
	// obtener libro
	public function getLibroacta() 
	{
    	return $this->getLibrosActas()->getDescripcion();
    	}

	// obtener 
	public function getNombremateria() 
	{
    	return $this->getMateriasPlanes()->getMaterias()->getNombre();
    	}

	// obtener 
	public function getEstadomateria() 
	{
    	return $this->getEstadosMateria()->getDescripcion();
    	}

	// obtener 
	public function confirmar($idalumno) 
	{
	// tildo los items como confirmado para transferir
    	$resultado = 0;
    	$q = Doctrine_Query::create()
			->select('fa.*')
			->from('Fichacarga fa')
  			->where('fa.idalumno = ?', $idalumno)
	    	->andWhere('fa.transferido = 0')
	    	->execute();


		foreach($q as $item){
			// EN ESTA PARTE SE DEBE CONTROLA SI NO HAY ERRORES DE CARGA
			/*
				En caso de mesas comunes si para el mismo libro y folio
				hay que controla si no fue cargada otra materia por error
			*/			
    			$actualizaficha = Doctrine_Query::create()
  			->update('Fichacarga fa')
  			->set('fa.controlado', true)
  			->where('fa.idficha = ?', $item->idficha);

  			$actualizaficha->execute();
		}

	}



	// obtener 
	public function transferir($idalumno) 
	{

	// se verifica que los datos cargados sean correctos
    	$resultado = 0;
    	$q = Doctrine_Query::create()
			->select('fa.*')
			->from('Fichacarga fa')
  			->where('fa.idalumno = ?', $idalumno)
	    	->andWhere('fa.transferido = 0')
	    	->execute();
		// por cada item no transferido
	/*	foreach($q as $item){



			// se busca la catedra 
			$q2 = Doctrine_Query::create()
			->select('ca.*')
			->from('Catedras ca')
			->where('ca.idsede = '.sfContext::getInstance()->getUser()->getProfile()->getIdsede())
			->andWhere('ca.idmateriaplan = '.$item->idmateriaplan)->execute();	
			foreach($q2 as $item2){
				$idcatedra=$item2->idcatedra;
				$idsede=$item2->idsede;
				$idmateriaplan=$item->idmateriaplan;

				if($item->idestadomateria<>9){

					// si es estado 1 cursando o 3 regular

					// busco comision
					$q3 = Doctrine_Query::create()
					->select('co.*')
					->from('Comisiones co')
					->where('co.idcatedra = '.$idcatedra)->execute();
					// registro 
					foreach($q3 as $item3){
					    $AluMat = new AluMat();
					    $AluMat->idalumno=$item->idalumno;
					    $AluMat->idestadomateria=$item->idestadomateria;
					    $AluMat->fecha=$item->fecha;
					    $AluMat->fechavencimiento=$item->fechavencimiento;
					    $AluMat->idcomision=$item3->idcomision;
					    $AluMat->idcatedra=$idcatedra;
					    $AluMat->save();

				    			$actualizaficha = Doctrine_Query::create()
				  			->update('Fichacarga fa')
				  			->set('fa.transferido', true)
				  			->set('fa.controlado', true)
				  			->where('fa.idficha = ?', $item->idficha);

				  			$actualizaficha->execute();	

					}

				} else {

				    	$q1 = Doctrine_Query::create()
							->select('me.*')
							->from('MesasExamenes me')
				  			->where('me.idlibroacta = ?', $item->idlibroacta)
					    	->andWhere('me.folio = ?', $item->folio)
					    	->execute();

						$mesaexiste=false;
						$mesacontrolada=false;

						foreach($q1 as $mesa1){	
							$mesaexiste=true;
						}

						// si libro y folio no existe se crea la mesa
					if(!$mesaexiste){
					
						$MesasExamenes = new MesasExamenes();
						$MesasExamenes->idlibroacta = $item->idlibroacta;  
						$MesasExamenes->idtipoexamen = 1; 
						$MesasExamenes->idcondicion = 1;    
						$MesasExamenes->idestadomesaexamen = 4;
						$MesasExamenes->idcatedra = $idcatedra ;       
						$MesasExamenes->folio = $item->folio; 
						$MesasExamenes->hora = '00:00';
						$MesasExamenes->libro = $item->getLibrosActas()->getDescripcion();
				
						$MesasExamenes->fecha = $item->fecha; 
						$MesasExamenes->save();
						$mesaexisteyconcuerda=true;
						$idmesaexamen=$MesasExamenes->getIdmesaexamen();
						$mesacontrolada=true;
					} 
						// si la mesa existe controlo que se corresponda con la misma materia
						$q = Doctrine_Query::create()
							->select('me.*')
							->from('Mesasexamenes me')
				  			->where('me.idlibroacta = ?', $item->idlibroacta)
					    	->andWhere('me.folio = ?', $item->folio)
					    	->andWhere('me.idcatedra = ?', $idcatedra)
					    	->execute();


						foreach($q as $mesa){	
							$idmesaexamen=$mesa->idmesaexamen;
							$mesacontrolada=true;
						}
		

					if($mesacontrolada){
						$Examenes = new Examenes();
						$Examenes->idmesaexamen=$idmesaexamen;
						$Examenes->idalumno=$item->idalumno;
						$Examenes->promedio=$item->promedio;
						$Examenes->save();

				    			$actualizaficha = Doctrine_Query::create()
				  			->update('Fichacarga fa')
				  			->set('fa.transferido', true)
				  			->set('fa.controlado', true)
				  			->where('fa.idficha = ?', $item->idficha);

				  			$actualizaficha->execute();

						    $AluMat = new AluMat();
						    $AluMat->idalumno=$item->idalumno;
						    $AluMat->idestadomateria=$item->idestadomateria;
						    $AluMat->fecha=$item->fecha;
						    $AluMat->fechavencimiento=$item->fechavencimiento;
						    $AluMat->idcomision=$item3->idcomision;
						    $AluMat->idcatedra=$idcatedra;
						    $AluMat->save();
		
					}
				} // si es estado =9

			}

			
		}*/




    	}

	public function limpiar() 
	{

	// se verifica que los datos cargados sean correctos
    	$actualizaficha = Doctrine_Query::create()
	->delete('Fichacarga fa')
	->where('fa.idalumno = 0')
        ->execute();


	}


}


